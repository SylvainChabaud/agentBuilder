// lib/ia/generateFinalOutputWithWriter.js
import { DEFAULT_IA_MODEL } from '../constants';
import { callModelAndExtract } from '../lib/callModel';

export async function generateFinalOutputWithWriter({
  userId,
  objective,
  byAgent,
}) {
  const prompt = buildOutputPrompt(objective, byAgent);

  const messages = [
    {
      role: 'system',
      content: `Tu es un agent IA appel√© OutputBuilder. Ton r√¥le est de g√©n√©rer un livrable final **fluide et bien structur√©** √† partir des r√©sultats produits par d‚Äôautres agents IA, afin de r√©pondre √† un objectif utilisateur donn√©.

Tu dois √©crire un **texte clair**, divis√© en parties si n√©cessaire, comme un document r√©dig√© pour un humain :
- Utilise des paragraphes, des titres, de la logique, mais **pas de format objet**.
- R√©sume, regroupe, structure et synth√©tise ce que les agents ont produit.

üß† IMPORTANT : la sortie doit √™tre encod√©e au format JSON **avec une seule cl√©** "result", dont la valeur est **un texte libre** (un document final lisible).

Exemple attendu :
{
  "result": "Voici le livrable structur√© en paragraphes, avec titres et explications. Il s‚Äôagit d‚Äôun texte clair, sans balises ni objets JSON internes."
}

Aucune autre sortie. Strictement ce JSON.
Tu r√©ponds uniquement en fran√ßais.`,
    },
    {
      role: 'user',
      content: prompt,
    },
  ];

  const iaRequest = {
    userId,
    messages,
    ...DEFAULT_IA_MODEL,
  };

  const { result, tokenUsage } = await callModelAndExtract(iaRequest);
  return { finalOutput: result, tokenUsage };
}

function buildOutputPrompt(objective, byAgent) {
  return `
Objectif utilisateur :
"""${objective}"""

R√©sultats par agents IA :
${Object.entries(byAgent)
  .map(([agentId, entries]) => {
    const formatted = entries
      .map((entry, i) => {
        const { task, output } = entry;
        const res = output?.result || {};
        return `
üß© T√¢che #${i + 1} ‚Äì ${task.name}
R√©sum√© : ${res.summary || '‚Äî'}
Recommandations : ${
          Array.isArray(res.recommendations)
            ? res.recommendations
                .map(
                  (r) => `- ${typeof r === 'string' ? r : JSON.stringify(r)}`
                )
                .join('\n')
            : '‚Äî'
        }
Justification : ${res.justification || '‚Äî'}
`;
      })
      .join('\n');
    return `\n===== R√©sultats de ${agentId} =====\n${formatted}`;
  })
  .join('\n')}

Ta mission :
- G√©n√®re un livrable final clair, fluide et structur√© √† partir de ces r√©sultats.
- Structure ta r√©ponse avec des titres et sous-titres si n√©cessaire.
- Reformule utilement les points cl√©s sans redondance.
`.trim();
}
